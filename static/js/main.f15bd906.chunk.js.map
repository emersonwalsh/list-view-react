{"version":3,"sources":["initial-data.js","topbar.jsx","columnHeader.jsx","task.jsx","column.jsx","index.js"],"names":["initialData","tasks","id","content","ceo","days","owner","columns","title","taskIds","columnOrder","Container","styled","div","Name","Search","Topbar","style","borderRadius","border","fontSize","type","placeholder","React","Component","ColumnItem","ColumnHeader","props","isDragging","Handle","TaskOwner","EditButton","Task","rowStyle","width","lineHeight","display","justifyContent","rowItemStyle","textOverflow","overflow","backgroundColor","rowItemButtonIconStyle","paddingLeft","linkStyle","draggableId","this","task","index","provided","snapshot","draggableProps","ref","innerRef","dragHandleProps","href","charAt","target","icon","faEllipsisV","Title","h3","TaskList","Column","column","droppableId","droppableProps","isDraggingOver","map","key","App","state","onDragStart","onDragEnd","result","destination","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","setState","newTaskIds","newColumn","columnId","taskId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f15bd906.chunk.js","sourcesContent":["const initialData = {\n    tasks: {\n        'task-1': { id: 'task-1', content: 'AirBnB', ceo: 'Brian', days: 24, owner: 'Spencer' },\n        'task-2': { id: 'task-2', content: 'Stripe', ceo: 'Patrick', days: 16, owner: 'John' },\n        'task-3': { id: 'task-3', content: 'SoFi', ceo: 'Anthony', days: 14, owner: 'Spencer' },\n        'task-4': { id: 'task-4', content: 'Palantir', ceo: 'Alex', days: 12, owner: 'Spencer' },\n        'task-5': { id: 'task-5', content: 'Compass', ceo: 'Robert', days: 3, owner: 'John' },\n        'task-6': { id: 'task-6', content: 'Appnexus', ceo: 'Brian', days: 1, owner: 'Spencer' },\n        'task-7': { id: 'task-7', content: 'Box', ceo: 'Dylan', days: 8, owner: 'John' },\n        'task-8': { id: 'task-8', content: 'DoorDash', ceo: 'Tony', days: 31, owner: 'Spencer' },\n        'task-9': { id: 'task-9', content: 'Houzz', ceo: 'Adi', days: 9, owner: 'Spencer'},\n        'task-10': { id: 'task-10', content: 'SnowFlake', ceo: 'Frank', days: 18 , owner: 'John'},\n    },\n    columns: {\n        'column-1': {\n            id: 'column-1',\n            title: 'Of Interest',\n            taskIds: [ 'task-1', 'task-2', 'task-6', 'task-7', 'task-8', 'task-9' ]\n        },\n        'column-2': {\n            id: 'column-2',\n            title: 'Due Dilligence',\n            taskIds: [ 'task-3', 'task-4' ]\n        },\n        'column-3': {\n            id: 'column-3',\n            title: 'Portfolio',\n            taskIds: [ 'task-10' ]\n        },\n        'column-4': {\n            id: 'column-4',\n            title: 'Pass',\n            taskIds: [ 'task-5' ]\n        },\n    },\n    columnOrder: [ 'column-1', 'column-2', 'column-3', 'column-4' ]\n};\n\nexport default initialData;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 50px;\n    width: 100%;\n`;\n\nconst Name = styled.div`\n    float: left;\n    line-height: 50px;\n    font-size: 1.7em;\n    padding-left: 8px;\n    color: white;\n`;\n\nconst Search = styled.div`\n    float: right;\n    line-height: 50px;\n    padding-right: 8px;\n`;\n\n\n\n\nexport default class Topbar extends React.Component {\n    render() {\n        const searchStyle = {\n            borderRadius: '5px',\n            border: '1px solid lightgrey',\n            fontSize: '1em'\n        };\n        return (\n            <Container>\n                <Name>Deal Board</Name>\n                <Search>\n                    <input style={searchStyle} type=\"text\" placeholder=\"Add Company...\" />\n                </Search>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 30px;\n    width: calc(100% - 95px);\n    line-height: 30px;\n    display: flex;\n    justify-content: space-between;\n    padding-left: 50px;\n`;\n\nconst ColumnItem = styled.div`\n    line-height: 30px;\n    width: 15%;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    color: white;\n`;\n\nexport default class ColumnHeader extends React.Component {\n    render() {\n        const searchStyle = {\n            borderRadius: '5px',\n            border: '1px solid lightgrey',\n            fontSize: '1em'\n        };\n        return (\n            <Container>\n                <ColumnItem>Company</ColumnItem>\n                <ColumnItem>POC</ColumnItem>\n                <ColumnItem>Last Contact</ColumnItem>\n                <ColumnItem>Owner</ColumnItem>\n                <ColumnItem>Next Steps</ColumnItem>\n                <ColumnItem>Priority</ColumnItem>\n                <ColumnItem>Company</ColumnItem>\n\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nconst Container = styled.div`\n    border: ${props => (props.isDragging ? '2px solid white' : '2px solid white')};\n    border-radius: 1px;\n    margin-bottom: 8px;\n    background-color: ${props => (props.isDragging ? '#EFEFEF' : 'white')};\n    display: flex;\n    box-shadow: ${props => (props.isDragging ? '0 0 8px' : '0 0 0px')};\n`;\n\nconst Handle = styled.div`\n    width: 30px;\n    height: 30px;\n    background-color: #79bb79;\n    border-radius: 1px;\n    margin-right: 8px;\n`;\n\nconst TaskOwner = styled.div`\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background-color: #79bb79;\n    color: white;\n    margin: 5px 0;\n    text-align: center;\n    line-height: 20px;\n    cursor: default;\n`;\n\nconst EditButton = styled.div`\n    width: 30px;\n    border-radius: 0 1px 1px 0;\n    cursor: pointer;\n    background-color: white;\n`;\n\nexport default class Task extends React.Component {\n    render() {\n        const rowStyle = {\n            width: '100%',\n            lineHeight: '30px',\n            display: 'flex',\n            justifyContent: 'space-between'\n        };\n\n        const rowItemStyle = {\n            width: '15%',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n            backgroundColor: 'white'\n        };\n\n        const rowItemButtonIconStyle = {\n            paddingLeft: '15px',\n            backgroundColor: 'white'\n        };\n\n        const linkStyle = {\n            backgroundColor: 'white'\n        };\n\n        return (\n            <Draggable draggableId={this.props.task.id} index={this.props.index}>\n                {(provided, snapshot) => (\n                    <Container\n                        {...provided.draggableProps}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}\n                    >\n                        <Handle {...provided.dragHandleProps} />\n                        <div style={rowStyle}>\n                            <div style={rowItemStyle}>{this.props.task.content}</div>\n                            <div style={rowItemStyle}>\n                                <a style={linkStyle} href=\"mailto:name@email.com\">{this.props.task.ceo}</a>                            \n                            </div>\n                            <div style={rowItemStyle}>{this.props.task.days} days</div>\n                            <div style={rowItemStyle}>\n                                <TaskOwner title={this.props.task.owner}>{this.props.task.owner.charAt(0)}</TaskOwner>\n                            </div>\n                            <div style={rowItemStyle}>\n                                Next step\n                            </div>\n                            <div style={rowItemStyle}>\n                                High priority\n                            </div>\n                            <div style={rowItemStyle}>\n                                <a style={linkStyle} href=\"https://products.office.com/en-us/onedrive-for-business/online-cloud-storage\" target=\"_blank\">Material</a>\n                            </div>\n                            <EditButton>\n                                <FontAwesomeIcon style={rowItemButtonIconStyle} icon={faEllipsisV} />\n                            </EditButton>\n                        </div>\n                    </Container>\n                )}\n            </Draggable>\n        )\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Task from './task.jsx'\n\nconst Container = styled.div`\n    margin: 8px;\n    border-radius: 2px;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Title = styled.h3`\n    padding: 8px;\n    color: #484850;\n    font-size: 1.2em;\n    background-color: #2684ff;\n    color: white;\n\n`;\n\nconst TaskList = styled.div`\n    padding: 8px 8px 0 8px;\n    flex-grow: 1;\n    min-height: 40px;\n    background-color: #2684ff;\n    transition: background-color 0.1s ease 0s;\n`;\n// background-color: ${props => (props.isDraggingOver ? 'rgb(222, 235, 255)' : '#2684ff')};\n\n\nexport default class Column extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Title>\n                    {this.props.column.title}\n                </Title>\n                <Droppable droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <TaskList\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                        >\n                            {this.props.tasks.map((task, index) => <Task key={task.id} task={task} index={index} />)}\n                            {provided.placeholder}\n                        </TaskList>\n                    )}\n                </Droppable>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport '@atlaskit/css-reset';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Topbar from './topbar.jsx';\nimport ColumnHeader from './columnHeader.jsx';\nimport Column from './column.jsx';\n\nclass App extends React.Component {\n    state = initialData;\n\n    onDragStart = () => {\n        // document.body.style.color = 'orange';\n        // document.body.style.transition = 'background-color 0.2s ease';\n    }\n\n    // onDragUpdate = update => {\n    //     const { destination } = update;\n    //     const opacity = destination\n    //         ? destination.index / Object.keys(this.state.tasks).length\n    //         : 0;\n    //     document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n    // }\n\n    onDragEnd = result => {\n        // document.body.style.color = 'inherit';\n        // document.body.style.backgroundColor = 'inherit';\n\n        const {destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        const start = this.state.columns[source.droppableId];\n        const finish = this.state.columns[destination.droppableId];\n\n        // Movement within a column\n        if (start === finish) {\n            const newTaskIds = Array.from(start.taskIds);\n\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, draggableId);\n    \n            const newColumn = {\n                ...start,\n                taskIds: newTaskIds,\n            };\n    \n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn\n                }\n            };\n    \n            this.setState(newState);\n            return;\n        }\n\n        // Movement across columns\n        const startTaskIds = Array.from(start.taskIds);\n        startTaskIds.splice(source.index, 1);\n        const newStart = {\n            ...start,\n            taskIds: startTaskIds\n        };\n\n        const finishTaskIds = Array.from(finish.taskIds);\n        finishTaskIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            taskIds: finishTaskIds\n        };\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            }\n        };\n\n        this.setState(newState);\n        \n        // todo call endpoint to save state (server-side)\n    }\n\n    render() {\n        return (\n            <DragDropContext \n                onDragEnd={this.onDragEnd}\n                onDragStart={this.onDragStart}\n                // onDragUpdate={this.onDragUpdate}\n            >\n                <Topbar></Topbar>\n                <ColumnHeader></ColumnHeader>\n                {this.state.columnOrder.map(columnId => {\n                    const column = this.state.columns[columnId];\n                    const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n                    return <Column key={column.id} column={column} tasks={tasks} />\n                })}\n            </DragDropContext>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}