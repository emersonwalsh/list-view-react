{"version":3,"sources":["initial-data.js","topbar.jsx","columnHeader.jsx","editMenu.jsx","nameAvatar.jsx","priorityInput.jsx","task.jsx","column.jsx","index.js"],"names":["initialData","tasks","id","content","ceo","days","owner","priority","columns","title","taskIds","columnOrder","Container","styled","div","Name","Topbar","addDeal","console","log","Button","variant","color","style","float","right","top","backgroundColor","onClick","this","startIcon","React","Component","ColumnItem","options","ITEM_HEIGHT","LongMenu","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","e","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","borderRadius","padding","Menu","keepMounted","onClose","PaperProps","maxHeight","width","map","option","MenuItem","key","selected","NameAvatar","Avatar","height","fontSize","props","name","charAt","PriorityInput","Box","display","flexDirection","paddingTop","Rating","defaultValue","size","isDragging","Handle","Task","rowStyle","lineHeight","justifyContent","rowItemStyle","textOverflow","overflow","linkStyle","draggableId","task","index","provided","snapshot","draggableProps","ref","innerRef","dragHandleProps","href","target","Title","h3","TaskList","Column","column","droppableId","droppableProps","isDraggingOver","placeholder","App","state","onDragStart","onDragEnd","result","destination","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","setState","newTaskIds","newColumn","columnId","taskId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.401cbdbb.chunk.js","sourcesContent":["const initialData = {\n    tasks: {\n        'task-1': { id: 'task-1', content: 'AirBnB', ceo: 'Brian', days: 24, owner: 'Spencer', priority: 5 },\n        'task-2': { id: 'task-2', content: 'Stripe', ceo: 'Patrick', days: 16, owner: 'John', priority: 1 },\n        'task-3': { id: 'task-3', content: 'SoFi', ceo: 'Anthony', days: 14, owner: 'Spencer', priority: 0 },\n        'task-4': { id: 'task-4', content: 'Palantir', ceo: 'Alex', days: 12, owner: 'Spencer', priority: 3 },\n        'task-5': { id: 'task-5', content: 'Compass', ceo: 'Robert', days: 3, owner: 'John', priority: 0 },\n        'task-6': { id: 'task-6', content: 'Appnexus', ceo: 'Brian', days: 1, owner: 'Spencer', priority: 2 },\n        'task-7': { id: 'task-7', content: 'Box', ceo: 'Dylan', days: 8, owner: 'John', priority: 1 },\n        'task-8': { id: 'task-8', content: 'DoorDash', ceo: 'Tony', days: 31, owner: 'Spencer', priority: 1 },\n        'task-9': { id: 'task-9', content: 'Houzz', ceo: 'Adi', days: 9, owner: 'Spencer', priority: 0},\n        'task-10': { id: 'task-10', content: 'SnowFlake', ceo: 'Frank', days: 18 , owner: 'John', priority: 3 },\n    },\n    columns: {\n        'column-1': {\n            id: 'column-1',\n            title: 'Of Interest',\n            taskIds: [ 'task-1', 'task-2', 'task-6', 'task-7', 'task-8', 'task-9' ]\n        },\n        'column-2': {\n            id: 'column-2',\n            title: 'Due Dilligence',\n            taskIds: [ 'task-3', 'task-4' ]\n        },\n        'column-3': {\n            id: 'column-3',\n            title: 'Portfolio',\n            taskIds: [ 'task-10' ]\n        },\n        'column-4': {\n            id: 'column-4',\n            title: 'Pass',\n            taskIds: [ 'task-5' ]\n        },\n    },\n    columnOrder: [ 'column-1', 'column-2', 'column-3', 'column-4' ]\n};\n\nexport default initialData;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst Container = styled.div`\n    height: 50px;\n    width: 100%;\n`;\n\nconst Name = styled.div`\n    float: left;\n    line-height: 50px;\n    font-size: 1.7em;\n    padding-left: 8px;\n`;\n\nexport default class Topbar extends React.Component {\n    addDeal = () => {\n        // todo add to initial-data\n        // can we use some state management (Redux)\n        console.log('Add new deal!')\n    }\n    render() {\n        const searchStyle = {\n            float: 'right',\n            right: '8px',\n            top: '7px',\n            backgroundColor: '#2684ff'\n        };\n        return (\n            <Container>\n                <Name>Deal Board</Name>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={searchStyle}\n                    onClick={this.addDeal}\n                    startIcon={<AddIcon />}\n                >\n                    Add Deal\n                </Button>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 30px;\n    width: calc(100% - 95px);\n    line-height: 30px;\n    display: flex;\n    justify-content: space-between;\n    padding-left: 50px;\n`;\n\nconst ColumnItem = styled.div`\n    line-height: 30px;\n    width: 15%;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    color: white;\n`;\n\nexport default class ColumnHeader extends React.Component {\n    render() {\n        const searchStyle = {\n            borderRadius: '5px',\n            border: '1px solid lightgrey',\n            fontSize: '1em'\n        };\n        return (\n            <Container>\n                <ColumnItem>Company</ColumnItem>\n                <ColumnItem>POC</ColumnItem>\n                <ColumnItem>Last Contact</ColumnItem>\n                <ColumnItem>Owner</ColumnItem>\n                <ColumnItem>Next Steps</ColumnItem>\n                <ColumnItem>Priority</ColumnItem>\n                <ColumnItem>Company</ColumnItem>\n\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst options = [\n  'Edit',\n  'View Details',\n  'Delete',\n];\n\nconst ITEM_HEIGHT = 48;\n\nexport default function LongMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n    console.log(event.currentTarget);\n  };\n\n  const handleClose = e => {\n    setAnchorEl(null);\n    console.log(e);\n  };\n\n  const iconStyle = {\n      borderRadius: '0px',\n      padding: '8px'\n  }\n\n  return (\n    <div>\n        <IconButton\n            aria-label=\"more\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            style={iconStyle}\n            >\n            <MoreVertIcon />\n        </IconButton>\n        <Menu\n            id=\"long-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={open}\n            onClose={handleClose}\n            PaperProps={{\n                style: {\n                maxHeight: ITEM_HEIGHT * 4.5,\n                width: 130,\n                },\n            }}>\n            {options.map(option => (\n            <MenuItem key={option} selected={option === ''} onClick={handleClose}>\n                {option}\n            </MenuItem>\n            ))}\n        </Menu>\n    </div>\n  );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport default class NameAvatar extends React.Component {\n  render() {\n    const avatarStyle = {\n      backgroundColor: '#79bb79',\n      color: 'white',\n      height: '30px',\n      width: '30px',\n      fontSize: '14px',\n    };\n\n    const avatarContainer = {\n      padding: '5px 0',\n    };\n\n    return (\n      <div style={avatarContainer}>\n        <Avatar style={avatarStyle}>{this.props.name.charAt(0)}</Avatar>\n      </div>\n    )\n\n  }\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\n\n// todo change is only being refelcted in first instance... need to link to specific row \n// todo use different symbols other than stars\n\nexport default class PriorityInput extends React.Component {\n    render() {\n        const containerStyle = {\n            paddingTop: '11px'\n        }\n        return (\n            <Box display=\"flex\" flexDirection=\"column\" style={containerStyle}>\n                <Rating name=\"size-small\" defaultValue={this.props.priority} size=\"small\" />\n            </Box>\n        );\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\nimport EditMenu from './editMenu.jsx';\nimport NameAvatar from './nameAvatar.jsx';\nimport PriorityInput from './priorityInput.jsx';\n// import NextStepsInput from './nextStepsInput.jsx';\n\nconst Container = styled.div`\n    border: ${props => (props.isDragging ? '1px solid #ecebeb' : '1px solid #ecebeb')};\n    border-radius: 1px;\n    margin-bottom: 8px;\n    background-color: ${props => (props.isDragging ? 'white' : 'white')};\n    display: flex;\n    box-shadow: ${props => (props.isDragging ? '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)' : '0 0 0px')};\n    height: 40px;\n`;\n\nconst Handle = styled.div`\n    width: 40px;\n    height: 40px;\n    background-color: #2684ff;\n    border-radius: 1px;\n    margin-right: 8px;\n`;\n\nexport default class Task extends React.Component {\n    render() {\n        const rowStyle = {\n            width: '100%',\n            lineHeight: '40px',\n            display: 'flex',\n            justifyContent: 'space-between',\n        };\n\n        const rowItemStyle = {\n            width: '15%',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n            backgroundColor: 'white'\n        };\n\n        const rowItemButtonIconStyle = {\n            paddingLeft: '15px',\n            backgroundColor: 'white'\n        };\n\n        const linkStyle = {\n            backgroundColor: 'white',\n            color: '#2684ff'\n        };\n\n        return (\n            <Draggable draggableId={this.props.task.id} index={this.props.index}>\n                {(provided, snapshot) => (\n                    <Container\n                        {...provided.draggableProps}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}\n                    >\n                        <Handle {...provided.dragHandleProps} />\n                        <div style={rowStyle}>\n                            <div style={rowItemStyle}>{this.props.task.content}</div>\n                            <div style={rowItemStyle}>\n                                <a style={linkStyle} href=\"mailto:name@email.com\">{this.props.task.ceo}</a>                            \n                            </div>\n                            <div style={rowItemStyle}>{this.props.task.days} days</div>\n                            <div style={rowItemStyle}>\n                                <NameAvatar title={this.props.task.owner} name={this.props.task.owner} />\n                            </div>\n                            <div style={rowItemStyle}>\n                                Next Steps\n                                {/* <NextStepsInput /> */}\n                            </div>\n                            <div style={rowItemStyle}>\n                                <PriorityInput priority={this.props.task.priority} />\n                            </div>\n                            <div style={rowItemStyle}>\n                                <a style={linkStyle} href=\"https://products.office.com/en-us/onedrive-for-business/online-cloud-storage\" target=\"_blank\">Material</a>\n                            </div>\n                            <EditMenu />\n                        </div>\n                    </Container>\n                )}\n            </Draggable>\n        )\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Task from './task.jsx'\n\nconst Container = styled.div`\n    margin: 8px;\n    border-radius: 2px;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Title = styled.h3`\n    padding: 8px;\n    color: #484850;\n    font-size: 1.2em;\n`;\n\nconst TaskList = styled.div`\n    padding: 8px 8px 0 8px;\n    flex-grow: 1;\n    min-height: 40px;\n    transition: background-color 0.1s ease 0s;\n`;\n// background-color: ${props => (props.isDraggingOver ? 'rgb(222, 235, 255)' : '#2684ff')};\n\n\nexport default class Column extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Title>\n                    {this.props.column.title}\n                </Title>\n                <Droppable droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <TaskList\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                        >\n                            {this.props.tasks.map((task, index) => <Task key={task.id} task={task} index={index} />)}\n                            {provided.placeholder}\n                        </TaskList>\n                    )}\n                </Droppable>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport '@atlaskit/css-reset';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Topbar from './topbar.jsx';\nimport ColumnHeader from './columnHeader.jsx';\nimport Column from './column.jsx';\n\nclass App extends React.Component {\n    state = initialData;\n\n    onDragStart = () => {\n        // document.body.style.color = 'orange';\n        // document.body.style.transition = 'background-color 0.2s ease';\n    }\n\n    // onDragUpdate = update => {\n    //     const { destination } = update;\n    //     const opacity = destination\n    //         ? destination.index / Object.keys(this.state.tasks).length\n    //         : 0;\n    //     document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n    // }\n\n    onDragEnd = result => {\n        // document.body.style.color = 'inherit';\n        // document.body.style.backgroundColor = 'inherit';\n\n        const {destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        const start = this.state.columns[source.droppableId];\n        const finish = this.state.columns[destination.droppableId];\n\n        // Movement within a column\n        if (start === finish) {\n            const newTaskIds = Array.from(start.taskIds);\n\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, draggableId);\n    \n            const newColumn = {\n                ...start,\n                taskIds: newTaskIds,\n            };\n    \n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn\n                }\n            };\n    \n            this.setState(newState);\n            return;\n        }\n\n        // Movement across columns\n        const startTaskIds = Array.from(start.taskIds);\n        startTaskIds.splice(source.index, 1);\n        const newStart = {\n            ...start,\n            taskIds: startTaskIds\n        };\n\n        const finishTaskIds = Array.from(finish.taskIds);\n        finishTaskIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            taskIds: finishTaskIds\n        };\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            }\n        };\n\n        this.setState(newState);\n        \n        // todo call endpoint to save state (server-side)\n    }\n\n    render() {\n        return (\n            <DragDropContext \n                onDragEnd={this.onDragEnd}\n                onDragStart={this.onDragStart}\n                // onDragUpdate={this.onDragUpdate}\n            >\n                <Topbar></Topbar>\n                {/* <ColumnHeader></ColumnHeader> */}\n\n                {this.state.columnOrder.map(columnId => {\n                    const column = this.state.columns[columnId];\n                    const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n                    return <Column key={column.id} column={column} tasks={tasks} />\n                })}\n            </DragDropContext>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}