{"version":3,"sources":["initial-data.js","components/topbar.jsx","components/columnHeader.jsx","components/editMenu.jsx","components/nameAvatar.jsx","components/priorityInput.jsx","components/task.jsx","components/column.jsx","index.js"],"names":["initialData","tasks","id","content","ceo","days","owner","priority","columns","title","taskIds","columnOrder","Container","styled","div","Name","TopBar","React","useState","open","setOpen","handleCancel","Button","variant","color","style","float","right","top","backgroundColor","onClick","startIcon","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","DialogActions","ColumnItem","Component","options","ITEM_HEIGHT","LongMenu","anchorEl","setAnchorEl","Boolean","handleClose","e","console","log","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","borderRadius","padding","Menu","keepMounted","PaperProps","maxHeight","width","map","option","MenuItem","key","selected","NameAvatar","Avatar","height","fontSize","this","props","name","charAt","PriorityInput","Box","display","flexDirection","paddingTop","Rating","defaultValue","max","icon","emptyIcon","size","isDragging","Handle","Task","rowStyle","lineHeight","justifyContent","rowItemStyle","textOverflow","overflow","linkStyle","draggableId","task","index","provided","snapshot","draggableProps","ref","innerRef","dragHandleProps","href","target","Title","h3","TaskList","Column","column","droppableId","droppableProps","isDraggingOver","placeholder","App","state","onDragStart","onDragEnd","result","destination","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","setState","newTaskIds","newColumn","position","left","zIndex","columnId","taskId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e102cd4e.chunk.js","sourcesContent":["const initialData = {\n    tasks: {\n        'task-1': { id: 'task-1', content: 'AirBnB', ceo: 'Brian', days: 24, owner: 'Spencer', priority: 5 },\n        'task-2': { id: 'task-2', content: 'Stripe', ceo: 'Patrick', days: 16, owner: 'John', priority: 1 },\n        'task-3': { id: 'task-3', content: 'SoFi', ceo: 'Anthony', days: 14, owner: 'Spencer', priority: 0 },\n        'task-4': { id: 'task-4', content: 'Palantir', ceo: 'Alex', days: 12, owner: 'Spencer', priority: 3 },\n        'task-5': { id: 'task-5', content: 'Compass', ceo: 'Robert', days: 3, owner: 'John', priority: 0 },\n        'task-6': { id: 'task-6', content: 'Appnexus', ceo: 'Brian', days: 1, owner: 'Spencer', priority: 2 },\n        'task-7': { id: 'task-7', content: 'Box', ceo: 'Dylan', days: 8, owner: 'John', priority: 1 },\n        'task-8': { id: 'task-8', content: 'DoorDash', ceo: 'Tony', days: 31, owner: 'Spencer', priority: 1 },\n        'task-9': { id: 'task-9', content: 'Houzz', ceo: 'Adi', days: 9, owner: 'Spencer', priority: 0},\n        'task-10': { id: 'task-10', content: 'SnowFlake', ceo: 'Frank', days: 18 , owner: 'John', priority: 3 },\n    },\n    columns: {\n        'column-1': {\n            id: 'column-1',\n            title: 'Of Interest',\n            taskIds: [ 'task-1', 'task-2', 'task-6', 'task-7', 'task-8', 'task-9' ]\n        },\n        'column-2': {\n            id: 'column-2',\n            title: 'Due Dilligence',\n            taskIds: [ 'task-3', 'task-4' ]\n        },\n        'column-3': {\n            id: 'column-3',\n            title: 'Portfolio',\n            taskIds: [ 'task-10' ]\n        },\n        'column-4': {\n            id: 'column-4',\n            title: 'Pass',\n            taskIds: [ 'task-5' ]\n        },\n    },\n    columnOrder: [ 'column-1', 'column-2', 'column-3', 'column-4' ]\n};\n\nexport default initialData;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst Container = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 50px;\n    width: 100%;\n    background-color: white;\n    z-index: 2;\n    box-shadow: 0px 0px 8px -0px #ecebeb;    \n`;\n\nconst Name = styled.div`\n    float: left;\n    line-height: 50px;\n    font-size: 1.7em;\n    padding-left: 8px;\n`;\n\nconst AddButton = styled.div`\n\n`;\n\nexport default function TopBar() {\n    const [open, setOpen] = React.useState(false);\n  \n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n  \n    const handleCancel = () => {\n        setOpen(false);\n    };\n\n    const handleAdd = () => {\n        setOpen(false);\n        // TODO add to state\n      };\n\n    const buttonStyle = {\n        float: 'right',\n        right: '8px',\n        top: '7px',\n        backgroundColor: '#2684ff'\n    }\n  \n    return (\n        <Container>\n            <Name>Deal Board</Name>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={buttonStyle}\n                onClick={handleClickOpen}\n                startIcon={<AddIcon />}\n            >\n                Add Deal\n            </Button>\n            <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add a New Deal</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Enter company information below.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"normal\"\n                        id=\"company\"\n                        label=\"Company\"\n                        type=\"text\"\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        id=\"ceo-name\"\n                        label=\"CEO name\"\n                        type=\"text\"\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        id=\"ceo-email\"\n                        label=\"CEO email\"\n                        type=\"email\"\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        id=\"material-link\"\n                        label=\"One Drive Link\"\n                        type=\"url\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancel} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAdd} variant=\"contained\" color=\"primary\">\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Container>\n    );\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 30px;\n    width: calc(100% - 95px);\n    line-height: 30px;\n    display: flex;\n    justify-content: space-between;\n    padding-left: 50px;\n`;\n\nconst ColumnItem = styled.div`\n    line-height: 30px;\n    width: 15%;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    color: white;\n`;\n\nexport default class ColumnHeader extends React.Component {\n    render() {\n        const searchStyle = {\n            borderRadius: '5px',\n            border: '1px solid lightgrey',\n            fontSize: '1em'\n        };\n        return (\n            <Container>\n                <ColumnItem>Company</ColumnItem>\n                <ColumnItem>POC</ColumnItem>\n                <ColumnItem>Last Contact</ColumnItem>\n                <ColumnItem>Owner</ColumnItem>\n                <ColumnItem>Next Steps</ColumnItem>\n                <ColumnItem>Priority</ColumnItem>\n                <ColumnItem>Company</ColumnItem>\n\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst options = [\n  'Edit',\n  'View Details',\n  'Delete',\n];\n\nconst ITEM_HEIGHT = 48;\n\nexport default function LongMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n    console.log(event.currentTarget);\n  };\n\n  const handleClose = e => {\n    setAnchorEl(null);\n    console.log(e);\n  };\n\n  const iconStyle = {\n      borderRadius: '0px',\n      padding: '8px'\n  }\n\n  return (\n    <div>\n        <IconButton\n            aria-label=\"more\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            style={iconStyle}\n            >\n            <MoreVertIcon />\n        </IconButton>\n        <Menu\n            id=\"long-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={open}\n            onClose={handleClose}\n            PaperProps={{\n                style: {\n                maxHeight: ITEM_HEIGHT * 4.5,\n                width: 130,\n                },\n            }}>\n            {options.map(option => (\n            <MenuItem key={option} selected={option === ''} onClick={handleClose}>\n                {option}\n            </MenuItem>\n            ))}\n        </Menu>\n    </div>\n  );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport default class NameAvatar extends React.Component {\n  render() {\n    const avatarStyle = {\n      backgroundColor: '#79bb79',\n      color: 'white',\n      height: '30px',\n      width: '30px',\n      fontSize: '14px',\n    };\n\n    const avatarContainer = {\n      padding: '5px 0',\n    };\n\n    return (\n      <div style={avatarContainer}>\n        <Avatar style={avatarStyle}>{this.props.name.charAt(0)}</Avatar>\n      </div>\n    )\n\n  }\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n\n// todo change is only being refelcted in first instance... need to link to specific row \n\nexport default class PriorityInput extends React.Component {\n    render() {\n        const containerStyle = {\n            paddingTop: '11px'\n        }\n        return (\n            <Box display=\"flex\" flexDirection=\"column\" style={containerStyle}>\n                <Rating\n                    name=\"customized-empty\"\n                    defaultValue={this.props.priority}\n                    max={3}\n                    icon={<RadioButtonCheckedIcon fontSize=\"inherit\" />}\n                    emptyIcon={<RadioButtonUncheckedIcon fontSize=\"inherit\" />}\n                    size=\"small\"\n                />\n            </Box>\n        );\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\nimport EditMenu from './editMenu.jsx';\nimport NameAvatar from './nameAvatar.jsx';\nimport PriorityInput from './priorityInput.jsx';\n// import NextStepsInput from './nextStepsInput.jsx';\n\nconst Container = styled.div`\n    border: ${props => (props.isDragging ? '1px solid #ecebeb' : '1px solid #ecebeb')};\n    border-radius: 1px;\n    margin-bottom: 8px;\n    background-color: ${props => (props.isDragging ? 'white' : 'white')};\n    display: flex;\n    box-shadow: ${props => (props.isDragging ? '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)' : '0 0 0px')};\n    height: 40px;\n`;\n\nconst Handle = styled.div`\n    width: 40px;\n    height: 40px;\n    background-color: #2684ff;\n    border-radius: 1px;\n    margin-right: 8px;\n`;\n\nexport default class Task extends React.Component {\n    render() {\n        const rowStyle = {\n            width: '100%',\n            lineHeight: '40px',\n            display: 'flex',\n            justifyContent: 'space-between',\n        };\n\n        const rowItemStyle = {\n            width: '15%',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n            backgroundColor: 'white'\n        };\n\n        const rowItemButtonIconStyle = {\n            paddingLeft: '15px',\n            backgroundColor: 'white'\n        };\n\n        const linkStyle = {\n            backgroundColor: 'white',\n            color: '#2684ff'\n        };\n\n        return (\n            <Draggable draggableId={this.props.task.id} index={this.props.index}>\n                {(provided, snapshot) => (\n                    <Container\n                        {...provided.draggableProps}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}\n                    >\n                        <Handle {...provided.dragHandleProps} />\n                        <div style={rowStyle}>\n                            <div style={rowItemStyle}>{this.props.task.content}</div>\n                            <div style={rowItemStyle}>\n                                <a style={linkStyle} href=\"mailto:name@email.com\">{this.props.task.ceo}</a>                            \n                            </div>\n                            <div style={rowItemStyle}>{this.props.task.days} days</div>\n                            <div style={rowItemStyle}>\n                                <NameAvatar title={this.props.task.owner} name={this.props.task.owner} />\n                            </div>\n                            <div style={rowItemStyle}>\n                                Next Steps\n                                {/* <NextStepsInput /> */}\n                            </div>\n                            <div style={rowItemStyle}>\n                                <PriorityInput priority={this.props.task.priority} />\n                            </div>\n                            <div style={rowItemStyle}>\n                                <a style={linkStyle} href=\"https://products.office.com/en-us/onedrive-for-business/online-cloud-storage\" target=\"_blank\">Material</a>\n                            </div>\n                            <EditMenu />\n                        </div>\n                    </Container>\n                )}\n            </Draggable>\n        )\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Task from './task.jsx'\n\nconst Container = styled.div`\n    margin: 8px;\n    border-radius: 2px;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Title = styled.h3`\n    padding: 8px;\n    color: #484850;\n    font-size: 1.2em;\n`;\n\nconst TaskList = styled.div`\n    padding: 8px 8px 0 8px;\n    flex-grow: 1;\n    min-height: 40px;\n    transition: background-color 0.1s ease 0s;\n`;\n// background-color: ${props => (props.isDraggingOver ? 'rgb(222, 235, 255)' : '#2684ff')};\n\n\nexport default class Column extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Title>\n                    {this.props.column.title}\n                </Title>\n                <Droppable droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <TaskList\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                        >\n                            {this.props.tasks.map((task, index) => <Task key={task.id} task={task} index={index} />)}\n                            {provided.placeholder}\n                        </TaskList>\n                    )}\n                </Droppable>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport '@atlaskit/css-reset';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Topbar from './components/topbar.jsx';\nimport ColumnHeader from './components/columnHeader.jsx';\nimport Column from './components/column.jsx';\n\nclass App extends React.Component {\n    state = initialData;\n\n    onDragStart = () => {\n        // document.body.style.color = 'orange';\n        // document.body.style.transition = 'background-color 0.2s ease';\n    }\n\n    // onDragUpdate = update => {\n    //     const { destination } = update;\n    //     const opacity = destination\n    //         ? destination.index / Object.keys(this.state.tasks).length\n    //         : 0;\n    //     document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n    // }\n\n    onDragEnd = result => {\n        // document.body.style.color = 'inherit';\n        // document.body.style.backgroundColor = 'inherit';\n\n        const {destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        const start = this.state.columns[source.droppableId];\n        const finish = this.state.columns[destination.droppableId];\n\n        // Movement within a column\n        if (start === finish) {\n            const newTaskIds = Array.from(start.taskIds);\n\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, draggableId);\n    \n            const newColumn = {\n                ...start,\n                taskIds: newTaskIds,\n            };\n    \n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn\n                }\n            };\n    \n            this.setState(newState);\n            return;\n        }\n\n        // Movement across columns\n        const startTaskIds = Array.from(start.taskIds);\n        startTaskIds.splice(source.index, 1);\n        const newStart = {\n            ...start,\n            taskIds: startTaskIds\n        };\n\n        const finishTaskIds = Array.from(finish.taskIds);\n        finishTaskIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            taskIds: finishTaskIds\n        };\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            }\n        };\n\n        this.setState(newState);\n        \n        // todo call endpoint to save state (server-side)\n    }\n\n    render() {\n        const rowStyle = {\n            position: 'absolute',\n            top: '50px',\n            left: '0',\n            width: '100%',\n            zIndex: '1'\n        };\n\n        return (\n            <DragDropContext \n                onDragEnd={this.onDragEnd}\n                onDragStart={this.onDragStart}\n                // onDragUpdate={this.onDragUpdate}\n            >\n                <Topbar></Topbar>\n                {/* <ColumnHeader></ColumnHeader> */}\n                <div style={rowStyle}>\n                    {this.state.columnOrder.map(columnId => {\n                        const column = this.state.columns[columnId];\n                        const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n                        return <Column key={column.id} column={column} tasks={tasks} />\n                    })}\n                </div>\n                \n            </DragDropContext>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}